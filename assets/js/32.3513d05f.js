(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{530:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"🥝git🥝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🥝git🥝"}},[t._v("#")]),t._v(" 🥝Git🥝")]),t._v(" "),s("h2",{attrs:{id:"查阅表👇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查阅表👇"}},[t._v("#")]),t._v(" 查阅表👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/XXGGG/IHS/main/img/git.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"🟢-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-安装"}},[t._v("#")]),t._v(" 🟢 安装?!")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考网址"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"我还是直接记windows的吧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我还是直接记windows的吧"}},[t._v("#")]),t._v(" 我还是直接记windows的吧")]),t._v(" "),s("p",[t._v("直接"),s("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网下载"),s("OutboundLink")],1),t._v(",安装完成后，在开始菜单里找到“Git”->“Git Bash”")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('git config --global user.name "你的名字"\ngit config --global user.email "你的邮@箱地址.com"\n')])])]),s("h2",{attrs:{id:"🟢-创建-本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-创建-本地仓库"}},[t._v("#")]),t._v(" 🟢 创建 本地仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git init        //初始化（文件夹内会多出 .git的隐藏文件）\n")])])]),s("h2",{attrs:{id:"🟢-绑定-远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-绑定-远程仓库"}},[t._v("#")]),t._v(" 🟢 绑定 远程仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git remote add github <你的项目地址>\n")])])]),s("h2",{attrs:{id:"🟢-添加到暂存区（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-添加到暂存区（常用）"}},[t._v("#")]),t._v(" 🟢 添加到暂存区（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git add .       // . 表示全部//也可以特别指定一个文件\n")])])]),s("p",[t._v("git add . 后文件就会变成在仓库里“暂存的修改” 添加完说明，下次push提交上去的就是这些文件")]),t._v(" "),s("h2",{attrs:{id:"🟢-提交到本地仓库-附加说明（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-提交到本地仓库-附加说明（常用）"}},[t._v("#")]),t._v(" 🟢 提交到本地仓库-附加说明（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git commit -m '说明' \n")])])]),s("p",[t._v("add 和 commit 都是提交到本地仓库的 push才是推向远程仓库的")]),t._v(" "),s("h2",{attrs:{id:"🟢-推送到远程仓库（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-推送到远程仓库（常用）"}},[t._v("#")]),t._v(" 🟢 推送到远程仓库（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git push\n")])])]),s("h2",{attrs:{id:"🟢-绑定完仓库后的-初次-首次-推送-！！！"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-绑定完仓库后的-初次-首次-推送-！！！"}},[t._v("#")]),t._v(" 🟢 绑定完仓库后的 初次/首次 推送 ！！！")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git push -u origin master\n")])])]),s("h2",{attrs:{id:"🟢-克隆远程仓库到本地（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-克隆远程仓库到本地（常用）"}},[t._v("#")]),t._v(" 🟢 克隆远程仓库到本地（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git clone git@github.com:XXGGG/test.git\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"🟢-创建分支（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-创建分支（常用）"}},[t._v("#")]),t._v(" 🟢 创建分支（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git branch <新分支的名字>\n")])])]),s("h2",{attrs:{id:"🟢-切换分支（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-切换分支（常用）"}},[t._v("#")]),t._v(" 🟢 切换分支（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git checkout <分支的名字>\n")])])]),s("h2",{attrs:{id:"🟢-创建并切换分支（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-创建并切换分支（常用）"}},[t._v("#")]),t._v(" 🟢 创建并切换分支（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git checkout -b dev\n")])])]),s("h2",{attrs:{id:"🟢-查看当前分支（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-查看当前分支（常用）"}},[t._v("#")]),t._v(" 🟢 查看当前分支（常用）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git branch\n")])])]),s("h2",{attrs:{id:"🔵-合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-合并分支"}},[t._v("#")]),t._v(" 🔵 合并分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git merge <分支> \n//这个意思是把分支合并到 当前的分支  \n//假设当前的是master主分支，那就是把<分支>合并到当前分支\n")])])]),s("h2",{attrs:{id:"🔵-删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-删除分支"}},[t._v("#")]),t._v(" 🔵 删除分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git branch -d <分支>\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"🟡【新东西的git命令-switch】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡【新东西的git命令-switch】"}},[t._v("#")]),t._v(" 🟡【新东西的git命令 switch】")]),t._v(" "),s("blockquote",[s("p",[t._v("廖雪峰老师原话👇")])]),t._v(" "),s("p",[t._v("switch\n我们注意到切换分支使用"),s("code",[t._v("git checkout <branch>")]),t._v(",而前面讲过的撤销修改则是"),s("code",[t._v("git checkout -- <file>")]),t._v("，同一个命令，有两种作用，确实有点令人迷惑。")]),t._v(" "),s("p",[t._v("实际上，切换分支这个动作，用switch更科学。因此，最新版本的Git提供了新的git switch命令来切换分支：")]),t._v(" "),s("p",[t._v("创建并切换到新的分支，可以使用：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git switch -c <分支>\n")])])]),s("blockquote",[s("p",[t._v("这个c 应该是create 创造的意思 哈哈哈")])]),t._v(" "),s("p",[t._v("直接切换到已有的master分支，可以使用：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git switch master\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("但是说实话 我已经习惯使用git branch了 不过没事 再习惯习惯就好了")])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"🟡-查看本地仓库状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-查看本地仓库状态"}},[t._v("#")]),t._v(" 🟡 查看本地仓库状态")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git status\n")])])]),s("p",[t._v("（命令行里的）modified：就是你修改过的文件")]),t._v(" "),s("h2",{attrs:{id:"🟡-查看具体修改了什么内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-查看具体修改了什么内容"}},[t._v("#")]),t._v(" 🟡 查看具体修改了什么内容")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git diff\n")])])]),s("p",[t._v("按空格就可以往下显示"),s("br"),t._v(" "),s("strong",[t._v("不过具体修改了什么,还是直接用vs code侧边栏第三个那个“源代码管理”来看比较直观")]),s("br"),t._v(" "),s("strong",[t._v("（所以这个和上面那个比较少用，是回顾 “廖雪峰老师的git教程” 为了写这个手册笔记看到 所以才记下来的）")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Git管理的文件分为：  \n工作区，版本库，版本库又分为暂存区stage和暂存区分支master(仓库)\n\n工作区>>>>暂存区>>>>仓库\n\ngit add把文件从工作区>>>>暂存区，git commit把文件从暂存区>>>>仓库，\n\ngit diff查看工作区和暂存区差异，\n\ngit diff --cached查看暂存区和仓库差异，\n\ngit diff HEAD 查看工作区和仓库的差异，\n\ngit add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，\n\ngit commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。\n")])])]),s("h2",{attrs:{id:"🔵-查看历史提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-查看历史提交"}},[t._v("#")]),t._v(" 🔵 查看历史提交")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git log     //(按Q退出 “quit”)\n\ngit log --pretty=oneline      //精简版\n")])])]),s("h2",{attrs:{id:"🔵-用head表示当前版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-用head表示当前版本"}},[t._v("#")]),t._v(" 🔵 用HEAD表示当前版本")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("HEAD^           //上一个版本\nHEAD~100        //上一百个版本\n")])])]),s("h2",{attrs:{id:"🔵-回到以前的版本（reset）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-回到以前的版本（reset）"}},[t._v("#")]),t._v(" 🔵 回到以前的版本（reset）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard HEAD^        //（回到上一个版本）\n")])])]),s("blockquote",[s("p",[t._v("如果已经有A -> B -> C，想回到B：")]),t._v(" "),s("p",[t._v("方法一：reset到B，丢失C：")]),t._v(" "),s("p",[t._v("A -> B")]),t._v(" "),s("p",[t._v("方法二：再提交一个revert反向修改，变成B：")]),t._v(" "),s("p",[t._v("A -> B -> C -> B")]),t._v(" "),s("p",[t._v("C还在，但是两个B是重复的")]),t._v(" "),s("p",[t._v("看你的需求，也许C就是瞎提交错了（比如把密码提交上去了），必须reset")]),t._v(" "),s("p",[t._v("如果C就是修改，现在又要改回来，将来可能再改成C，那你就revert")])]),t._v(" "),s("h2",{attrs:{id:"🔵-返回未来的版本（reset）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-返回未来的版本（reset）"}},[t._v("#")]),t._v(" 🔵 返回未来的版本（reset）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reset --hard <commit ID>        //（回到指定commitID的版本）\n")])])]),s("h2",{attrs:{id:"🔵-查看命令历史（查看git记录你的所有命令）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-查看命令历史（查看git记录你的所有命令）"}},[t._v("#")]),t._v(" 🔵 查看命令历史（查看git记录你的所有命令）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git reflog\n")])])]),s("p",[t._v("可以用这个找到你的commitID，也可以看到你使用reset的命令")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"🟡-撤销修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-撤销修改"}},[t._v("#")]),t._v(" 🟡 撤销修改")]),t._v(" "),s("p",[s("strong",[t._v("其实这个是撤销工作区跟暂存区的修改 可以用vs code的“源代码管理”更方便")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git checkout --<要撤销修改的文件名>  //工作区的\n\ngit reset HEAD <要撤销修改的文件名>  //暂存区的\n把‘暂存区’的退到‘工作区’再用上面的命令从‘工作区’撤销修改\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"🔵-分支合并图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-分支合并图"}},[t._v("#")]),t._v(" 🔵 分支合并图")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git log --graph\n")])])]),s("h2",{attrs:{id:"🟡【分支管理策略】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡【分支管理策略】"}},[t._v("#")]),t._v(" 🟡【分支管理策略】")]),t._v(" "),s("p",[t._v("这块直接看老师的，后面再总结，原因是很少用到。。\n"),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/900005860592480",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.liaoxuefeng.com/wiki/896043488029600/900005860592480"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"🟡【标签管理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡【标签管理】"}},[t._v("#")]),t._v(" 🟡【标签管理】")]),t._v(" "),s("blockquote",[s("p",[t._v("这个老师说的好！ 但是我貌似之前工作没有用过。。。 嘟嘟嘴")])]),t._v(" "),s("h2",{attrs:{id:"🟡-打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-打标签"}},[t._v("#")]),t._v(" 🟡 打标签")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git tag v1.0\n\ngit tag v0.9 f52c633  //打在之前的commitID\n")])])]),s("h2",{attrs:{id:"🟡-查看标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-查看标签"}},[t._v("#")]),t._v(" 🟡 查看标签")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git tag \n")])])]),s("h2",{attrs:{id:"🟡-查看标签详情（打在什么commit上面）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-查看标签详情（打在什么commit上面）"}},[t._v("#")]),t._v(" 🟡 查看标签详情（打在什么commit上面）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git show <tagname>\n")])])]),s("h2",{attrs:{id:"🟡-还可以创建带说明的标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-还可以创建带说明的标签"}},[t._v("#")]),t._v(" 🟡 还可以创建带说明的标签")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('git tag -a v1.0 -m "说明" <commitID>\n')])])]),s("blockquote",[s("p",[t._v("git show <标签名> 就可以看到说明文字了")])]),t._v(" "),s("h2",{attrs:{id:"🟡-删除标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-删除标签"}},[t._v("#")]),t._v(" 🟡 删除标签")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git tag -d v1.0\n")])])]),s("h2",{attrs:{id:"🟡-推送标签到远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-推送标签到远程"}},[t._v("#")]),t._v(" 🟡 推送标签到远程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git push origin v1.0\n\ngit push origin --tags        //推全部标签\n")])])]),s("h2",{attrs:{id:"🟡-删除远程标签（比较麻烦）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-删除远程标签（比较麻烦）"}},[t._v("#")]),t._v(" 🟡 删除远程标签（比较麻烦）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git push origin :refs/tags/v1.0  \n//可以登陆GitHub查看是否删除\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"🟡-关于github的pull-request-关于参与开源项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-关于github的pull-request-关于参与开源项目"}},[t._v("#")]),t._v(" 🟡 关于GitHub的pull request - 关于参与开源项目")]),t._v(" "),s("p",[t._v("GitHub上面有很多开源的项目，可以参与开发或者修复bug，如果要参与，可以按别人项目里的fork把项目克隆到到自己的账号下，然后再clone到自己本地进行开发或修复bug。"),s("br"),t._v("\n当你开发/修复完后可以向作者发起pull request。如果他接受了，那项目就合并了，你就参与了这起开源项目。")]),t._v(" "),s("blockquote",[s("p",[t._v("说实话，我也很想参与开源项目，但就像老师说的，我的实力不允许，要不然，如果有些伟大而又有意义的项目，参与其中，帮助到很多人，真的是一件很有意思的事情。希望未来的我编程能力越来越厉害吧，不仅仅只是局限于前端，向我的偶像-钢铁侠学习！！！")])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"🔵-添加多一个远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-添加多一个远程仓库"}},[t._v("#")]),t._v(" 🔵 添加多一个远程仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git remote add gitee git@gitee.com:XXGGG/test.git\n")])])]),s("p",[t._v("这里‘gitee’要和之前的‘origin’不一样")]),t._v(" "),s("h2",{attrs:{id:"🟢-查看当前绑定的远程库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-查看当前绑定的远程库"}},[t._v("#")]),t._v(" 🟢 查看当前绑定的远程库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git remote -v\n")])])]),s("h2",{attrs:{id:"🟢-删除已有的远程库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-删除已有的远程库"}},[t._v("#")]),t._v(" 🟢 删除已有的远程库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git remote rm origin \n")])])]),s("h2",{attrs:{id:"🟢-忽略的文件（不想push的文件）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟢-忽略的文件（不想push的文件）"}},[t._v("#")]),t._v(" 🟢 忽略的文件（不想push的文件）")]),t._v(" "),s("p",[t._v("在项目文件夹里编写 .gitignore")]),t._v(" "),s("h2",{attrs:{id:"🟡-配置别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-配置别名"}},[t._v("#")]),t._v(" 🟡 配置别名")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git config --global alias st status\n")])])]),s("p",[t._v("就是告诉st 就表示status")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"\n")])])]),s("p",[t._v("???")]),t._v(" "),s("blockquote",[s("p",[t._v("如果不加--global git配置文件就会放在.git/config里[alias]")])]),t._v(" "),s("h2",{attrs:{id:"🟡-使用sourcetree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🟡-使用sourcetree"}},[t._v("#")]),t._v(" 🟡 使用SourceTree")]),t._v(" "),s("p",[t._v("用过，但是还是喜欢在命令行敲加上vsCode里的源代码管理！！")]),t._v(" "),s("h2",{attrs:{id:"🔴-变基-git-rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔴-变基-git-rebase"}},[t._v("#")]),t._v(" 🔴 变基? (git rebase)")]),t._v(" "),s("blockquote",[s("p",[t._v("参考文章(廖雪峰老师)："),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git rebase -i <历史分支id>\n\ngit rebase --abort\n\ngit rebase --skip\n\ngit rebase --continue\n")])])]),s("h2",{attrs:{id:"🔵-q：明文保存git密码push-pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-q：明文保存git密码push-pull"}},[t._v("#")]),t._v(" 🔵 Q：明文保存git密码push/pull")]),t._v(" "),s("p",[t._v("A：https://blog.csdn.net/gao454917848/article/details/82977349")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. git bash进入你的项目目录，输入：\n2. git config --global credential.helper store\n")])])]),s("p",[t._v("然后你会在你本地生成一个文本，上边记录你的账号和密码。当然这些你可以不用关心。然后你使用上述的命令配置好之后，再操作一次git pull，然后它会提示你输入账号密码，这一次之后就不需要再次输入密码了")]),t._v(" "),s("h2",{attrs:{id:"🔵-q：删除store明文储存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-q：删除store明文储存"}},[t._v("#")]),t._v(" 🔵 Q：删除store明文储存")]),t._v(" "),s("p",[t._v("A：https://www.cnblogs.com/volnet/p/git-credentials.html")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("git config --global --unset credential.helper -f\ngit config --local --unset credential.helper -f\n")])])]),s("h2",{attrs:{id:"🔵-工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔵-工具"}},[t._v("#")]),t._v(" 🔵 工具")]),t._v(" "),s("p",[t._v("远程连接liunx服务器 : FinalShell")]),t._v(" "),s("p",[t._v("Git桌面管理工具  :   Sourcetree")]),t._v(" "),s("h1",{attrs:{id:"【完】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【完】"}},[t._v("#")]),t._v(" "),s("strong",[t._v("【完】")])])])}),[],!1,null,null,null);a.default=r.exports}}]);